
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.HttpClients;
import org.json.JSONArray;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class SonarqubePermission {
    private static final String SONARQUBE_URL = "http://your-sonarqube-instance/api";
    private static final String API_KEY = "your-api-key";

    public static void main(String[] args) {
        HttpClient httpClient = HttpClients.createDefault();

        // Add Group Permission Template with permissions
        String[] permissions = {"user", "codeviewer", "issueadmin"};
        addGroupPermissionTemplate(httpClient, "your-group-name", "template-name", permissions);

        // Check if group is already added
        boolean isGroupAdded = isGroupAdded(httpClient, "your-group-name");
        System.out.println("Is group already added: " + isGroupAdded);
    }

    private static void addGroupPermissionTemplate(HttpClient httpClient, String groupName, String templateName, String[] permissions) {
        try {
            HttpPost httpPost = new HttpPost(SONARQUBE_URL + "/permissions/add_group");
            httpPost.setHeader("Authorization", "Bearer " + API_KEY);

            JSONObject requestBody = new JSONObject();
            requestBody.put("groupName", groupName);
            requestBody.put("templateName", templateName);

            JSONArray permissionsArray = new JSONArray();
            for (String permission : permissions) {
                permissionsArray.put(permission);
            }
            requestBody.put("permissions", permissionsArray);

            StringEntity entity = new StringEntity(requestBody.toString());
            httpPost.setEntity(entity);
            httpPost.setHeader("Accept", "application/json");
            httpPost.setHeader("Content-type", "application/json");

            HttpResponse response = httpClient.execute(httpPost);
            if (response.getStatusLine().getStatusCode() == 200) {
                System.out.println("Group permission template added successfully.");
            } else {
                System.err.println("Failed to add group permission template. Error: " + response.getStatusLine().getReasonPhrase());
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static boolean isGroupAdded(HttpClient httpClient, String groupName) {
        try {
            HttpGet httpGet = new HttpGet(SONARQUBE_URL + "/permissions/groups");
            httpGet.setHeader("Authorization", "Bearer " + API_KEY);
            HttpResponse response = httpClient.execute(httpGet);

            if (response.getStatusLine().getStatusCode() == 200) {
                HttpEntity entity = response.getEntity();
                BufferedReader reader = new BufferedReader(new InputStreamReader(entity.getContent()));
                StringBuilder jsonResponse = new StringBuilder();
                String line;
                while ((line = reader.readLine()) != null) {
                    jsonResponse.append(line);
                }
                JSONObject jsonObject = new JSONObject(jsonResponse.toString());
                JSONArray groups = jsonObject.getJSONArray("groups");
                for (int i = 0; i < groups.length(); i++) {
                    JSONObject group = groups.getJSONObject(i);
                    if (group.getString("name").equals(groupName)) {
                        return true;
                    }
                }
            } else {
                System.err.println("Failed to retrieve groups. Error: " + response.getStatusLine().getReasonPhrase());
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return false;
    }
}
