
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;

public class SonarQubePermissionTemplateCreator {

    private static final String SONARQUBE_URL = "http://your-sonarqube-url/api/permissions/template_definitions";
    private static final String API_TOKEN = "your-api-token";

    public static void main(String[] args) {
        String templateName = "your-template-name";

        // Check if template already exists
        boolean templateExists = checkIfTemplateExists(templateName);
        if (templateExists) {
            System.out.println("Permission template '" + templateName + "' already exists.");
        } else {
            // Create new permission template
            createPermissionTemplate(templateName);
            System.out.println("Permission template '" + templateName + "' created successfully.");
        }
    }

    private static boolean checkIfTemplateExists(String templateName) {
        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
            HttpGet request = new HttpGet(SONARQUBE_URL);
            request.addHeader("Authorization", "Bearer " + API_TOKEN);
            HttpResponse response = httpClient.execute(request);
            HttpEntity entity = response.getEntity();

            if (entity != null) {
                String responseBody = EntityUtils.toString(entity);
                JSONObject jsonResponse = new JSONObject(responseBody);
                if (jsonResponse.has("permissions")) {
                    JSONObject permissions = jsonResponse.getJSONObject("permissions");
                    return permissions.has(templateName);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }

    private static void createPermissionTemplate(String templateName) {
        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
            HttpPost request = new HttpPost(SONARQUBE_URL);
            request.addHeader("Authorization", "Bearer " + API_TOKEN);
            request.addHeader("Content-Type", "application/json");

            JSONObject requestBody = new JSONObject();
            requestBody.put("name", templateName);
            requestBody.put("description", "Your template description here");
            requestBody.put("projectKeyPattern", "your-project-key-pattern");
            requestBody.put("template", true);

            request.setEntity(new StringEntity(requestBody.toString()));
            HttpResponse response = httpClient.execute(request);

            if (response.getStatusLine().getStatusCode() != 200) {
                throw new RuntimeException("Failed to create permission template: " +
                        response.getStatusLine().getReasonPhrase());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
